---
- name: stop containers
  docker_container:
    name: "{{ item }}"
    state: stopped
  loop: "{{ stop_containers_before }}"

- name: set parameters (directory, volume)
  set_fact:
    docker_command: "cp -r /src /dest"
    src_mount: "{{ path }}:/src:ro"
  when: type == 'directory' or type == 'volume'

- name: set parameters (archive)
  set_fact:
    docker_command: "tar xf /src/archive -C /dest"
    src_mount: "{{ path }}:/src/archive:ro"
  when: type == 'archive'

- name: set parameters (purge_existing)
  set_fact:
    docker_command: "rm -rf /dest/* && {{ docker_command }}"
  when: purge_existing

- name: copy data to volume
  docker_container:
    name: "{{ container_name }}"
    image: "{{ image }}"
    purge_networks: true
    auto_remove: true
    detach: false
    command: "/bin/sh -c \"{{ docker_command }}\""
    volumes:
      - "{{ volume_name }}:/dest:rw"
      - "{{ src_mount }}"

- name: start containers
  docker_container:
    name: "{{ item }}"
    state: started
  loop: "{{ start_containers_after | default(stop_containers_before) }}"
